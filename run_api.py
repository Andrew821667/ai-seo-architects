#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ AI SEO Architects API Server
–ü–æ–¥–¥–µ—Ä–∂–∫–∞ development –∏ production —Ä–µ–∂–∏–º–æ–≤
"""

import uvicorn
import sys
import os
from pathlib import Path
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PATH
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

def run_development():
    """–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"""
    print("üöÄ –ó–∞–ø—É—Å–∫ AI SEO Architects API –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...")
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ environment variables
    host = os.getenv("API_HOST", "0.0.0.0")
    port = int(os.getenv("API_PORT", "8000"))
    log_level = os.getenv("LOG_LEVEL", "info").lower()
    
    print(f"üìä Dashboard: http://{host}:{port}/dashboard")
    print(f"üìö API Docs: http://{host}:{port}/api/docs") 
    print(f"üîç Health: http://{host}:{port}/health")
    print(f"üìà Metrics: http://{host}:{port}/metrics")
    print()
    
    uvicorn.run(
        "api.main:app",
        host=host,
        port=port,
        reload=True,
        log_level=log_level,
        reload_dirs=[str(project_root)],
        reload_includes=["*.py"],
        access_log=True
    )


def run_production():
    """–ó–∞–ø—É—Å–∫ –≤ production —Ä–µ–∂–∏–º–µ"""
    print("üè≠ –ó–∞–ø—É—Å–∫ AI SEO Architects API –≤ production —Ä–µ–∂–∏–º–µ...")
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ environment variables
    host = os.getenv("API_HOST", "0.0.0.0")
    port = int(os.getenv("API_PORT", "8000"))
    log_level = os.getenv("LOG_LEVEL", "warning").lower()
    workers = int(os.getenv("API_WORKERS", "4"))
    
    print(f"üåê API Server: http://{host}:{port}")
    print(f"‚öôÔ∏è Workers: {workers}")
    print(f"üìä Log Level: {log_level}")
    print()
    
    uvicorn.run(
        "api.main:app",
        host=host,
        port=port,
        workers=workers,
        log_level=log_level,
        access_log=False,
        server_header=False,
        date_header=False
    )


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    environment = os.getenv("ENVIRONMENT", "development")
    
    print(f"ü§ñ AI SEO Architects API Server")
    print(f"üìç Environment: {environment}")
    print(f"üìÅ Project Root: {project_root}")
    print("=" * 50)
    
    if environment.lower() in ["production", "prod"]:
        run_production()
    else:
        run_development()


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\nüëã –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        sys.exit(1)